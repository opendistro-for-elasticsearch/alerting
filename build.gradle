buildscript {
    apply from: 'build-tools/amazon-sandbox.gradle'
    apply from: 'build-tools/dependencies.gradle'
    apply from: 'build-tools/repositories.gradle'

    // This isn't applying from repositories.gradle so repeating it here
    repositories {
        if (sandboxedBuild) {
            maven { url offlineRepositoryRoot }
        } else {
            mavenCentral()
            maven { url "https://plugins.gradle.org/m2/" }
        }
    }
    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:${es_version}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
    }
}

apply plugin: 'base'
apply plugin: 'jacoco'
apply from: 'build-tools/brazil.gradle'
apply from: 'build-tools/prepare-offline-repo.gradle'
apply from: 'build-tools/merged-coverage.gradle'

allprojects {
    group = 'com.amazon.elasticsearch'
    version = es_version

    apply from: "$rootDir/build-tools/repositories.gradle"

    plugins.withId('java') {
        sourceCompatibility = targetCompatibility = "1.8"
    }
    plugins.withId('org.jetbrains.kotlin.jvm') {
        compileKotlin.kotlinOptions.jvmTarget = compileTestKotlin.kotlinOptions.jvmTarget = "1.8"
    }
}

evaluationDependsOnChildren()

task release(type: Copy, group: 'build') {
    dependsOn allprojects*.tasks.build
    from(zipTree(findProject(':monitoring').tasks.bundlePlugin.outputs.files.getSingleFile()))
    into "build/plugins/${es_mv}/aes-monitoring"
    includeEmptyDirs = false
    // ES versions < 6.3 have a top-level elasticsearch directory inside the plugin zip which we need to remove
    eachFile { it.path = it.path - "elasticsearch/" }
    // Codebuild can't run ES as root so we can't run tests there. In that case depend on assemble
//    dependsOn project(':monitoring').tasks.assemble
}

check.dependsOn subprojects*.check