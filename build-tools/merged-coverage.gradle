/*
 *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License").
 *   You may not use this file except in compliance with the License.
 *   A copy of the License is located at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   or in the "license" file accompanying this file. This file is distributed
 *   on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 *   express or implied. See the License for the specific language governing
 *   permissions and limitations under the License.
 */

allprojects {
    plugins.withId('jacoco') {
        jacoco.toolVersion = '0.8.5'
        // For some reason this dependency isn't getting setup automatically by the jacoco plugin
        tasks.withType(JacocoReport) { 
            dependsOn tasks.withType(Test)
        }
    }
}

task jacocoMerge(type: JacocoMerge) {
    gradle.projectsEvaluated {
        subprojects.each { 
            jacocoMerge.dependsOn it.tasks.withType(JacocoReport)
            jacocoMerge.executionData it.tasks.withType(JacocoReport).collect { it.executionData } 
        }
    }
    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

task jacocoReport(type: JacocoReport, group: 'verification') {
    description = 'Generates an aggregate report from all subprojects'
    dependsOn jacocoMerge
    executionData jacocoMerge.destinationFile

    reports {
        html.enabled = true // human readable
        xml.enabled = true
    }

    gradle.projectsEvaluated {
        getSourceDirectories().from(files(subprojects.sourceSets.main.allSource.srcDirs))
        getClassDirectories().from(files(subprojects.sourceSets.main.output))
    }
}

check.dependsOn jacocoReport
