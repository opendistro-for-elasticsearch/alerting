#!/bin/bash

set -o errexit
set -o pipefail

if [[ -n "$BRAZIL_PACKAGE_VERSION" || -n "$CANONICAL_ENVROOT" ]]; then
    s3-safe-download-all
fi

# As per https://www.elastic.co/blog/elasticsearch-java-9-and-beyond ES gradle plugin enforces that we build with JDK >=9
# but we need to run tests with JDK8 to ensure compatibility.  So we set both JAVA_HOME (to compile) and RUNTIME_JAVA_HOME
# (for running tests)
build_jdk_mv="$(brazil-path [JDK10]pkg.jdk.namemajorversion)"
build_jdk_path="$(brazil-path [JDK10]pkg.jdk.relativepath)"
build_jdk_envroot="$("$BRAZIL_BUILD_HOME/bin/brazil-bootstrap" --package ${build_jdk_mv})"
export JAVA_HOME="${build_jdk_envroot}/${build_jdk_path}"

runtime_jdk_mv="$(brazil-path [JDK8]pkg.jdk.namemajorversion)"
runtime_jdk_path="$(brazil-path [JDK8]pkg.jdk.relativepath)"
runtime_jdk_envroot="$("$BRAZIL_BUILD_HOME/bin/brazil-bootstrap" --package ${runtime_jdk_mv})"
export RUNTIME_JAVA_HOME="${runtime_jdk_envroot}/${runtime_jdk_path}"

ws_root="$(brazil-path workspace-root)"
export GRADLE_USER_HOME="$ws_root/env/.gradle_user_home"
export TERM=${TERM:-dumb}

# ES 6.2 test runner doesn't honor java.io.tmpdir so we need to set ES_TMPDIR here. This is also set in the build.gradle for other ES versions
build_root="$(brazil-path package-build-root)"
export ES_TMPDIR="$build_root/private/es_tmp"
mkdir -p $ES_TMPDIR

GRADLE=$(which gradle)
for ES_MAJOR_VERSION in "6.2" "6.3"; do
    echo "Running '$GRADLE $@' for ES major version $ES_MAJOR_VERSION"
    $GRADLE -P es.mv=$ES_MAJOR_VERSION --stacktrace "$@"
done
