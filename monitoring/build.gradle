apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'elasticsearch.esplugin'
apply plugin: 'org.jetbrains.kotlin.jvm'

ext {
    projectSubstitutions = [:]
    licenseFile = rootProject.file('LICENSE.txt')
    noticeFile = rootProject.file('NOTICE.txt')
}

esplugin {
    name 'aes-monitoring'
    description 'Amazon Elasticsearch service monitoring plugin'
    classname 'com.amazon.elasticsearch.monitoring.MonitoringPlugin'
    extendedPlugins = ['lang-painless']
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

// We don't have unit tests, only integration tests.
test {
    enabled = false
}

// Uncomment to attach a debugger to elasticsearch cluster JVM during run or integTest
//run.debug true
//integTest.debug true

// We can't just create a single cluster with numNodes = 3 since that creates task dependencies in such a way that killing and 
// restarting a single node also restarts all the other nodes.  Instead we setup 3 separate single node clusters with the 
// same cluster name that we can start and kill separately using '../gradlew 'runMultiNodeTest1#start"
(1..3).each { i ->
    tasks.create(name : "runMultiNode$i", type: org.elasticsearch.gradle.test.RunTask) {
        daemonize = true
        numNodes = 1
        setting('node.name', "multi-node-$i")
        setting('http.port', '9200-9300')
        setting('transport.tcp.port', '9300-9400')
        clusterName = 'multi-node-run'
        plugin(project.path)
    }
}

integTestRunner {
    systemProperty 'tests.security.manager', 'false'
    include '**/*Tests.class'
    // TODO: Figure out how to have the runner execute both java and kotlin test classes which are present in
    // different output dirs.  Right now we only have kotlin tests.
    testClassesDir = compileTestKotlin.destinationDir

    // Uncomment to attach a debugger to integration tests JVM
//    jvmArg '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005'
}

integTestCluster {
    distribution = (es_version < "6.3.0") ? 'zip' : 'oss-zip' // Use oss-zip distribution starting from 6.3.0
}

licenseHeaders.enabled = false
dependencyLicenses.enabled = false
thirdPartyAudit.enabled = false

configurations.all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-api-java9'

dependencies {
    // ES doesn't provide a full painless scripting engine maven artifact that we can compile against. Use a third party
    // artifact as a replacement for compilation and testing. See https://github.com/elastic/elasticsearch/issues/24528
    compileOnly "org.codelibs.elasticsearch.module:lang-painless:${es_version}"
    compileOnly "org.codelibs.elasticsearch.module:lang-mustache:${es_version}"
    
    // Elasticsearch Nanny state
    compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    compile "org.jetbrains.kotlin:kotlin-stdlib-common:${kotlin_version}"
    compile "org.jetbrains:annotations:13.0"

    compile project(":core")

    // This needs to be declared manually as the offline dependencies task does not pick this up automatically for some reason
    checkstyle "com.puppycrawl.tools:checkstyle:${project.checkstyle.toolVersion}"
}

afterEvaluate { 
    repositories.remove(repositories.findByName("MavenRepo"))
}