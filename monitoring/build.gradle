apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'elasticsearch.esplugin'
apply plugin: 'org.jetbrains.kotlin.jvm'

repositories {
    mavenCentral()
}

ext {
    projectSubstitutions = [:]
    licenseFile = rootProject.file('LICENSE.txt')
    noticeFile = rootProject.file('NOTICE.txt')
}

esplugin {
    name 'aes-monitoring'
    description 'Amazon Elasticsearch service monitoring plugin'
    classname 'com.amazon.elasticsearch.monitoring.MonitoringPlugin'
    extendedPlugins = ['lang-painless']
}

// We don't have unit tests, only integration tests.
test {
    enabled = false
}

// Uncomment to attach a debugger to elasticsearch cluster JVM during run or integTest
//run.debug true
//integTest.debug true

integTestRunner {
    systemProperty 'tests.security.manager', 'false'
    include '**/*Tests.class'
    // TODO: Figure out how to have the runner execute both java and kotlin test classes which are present in
    // different output dirs.  Right now we only have kotlin tests.
    testClassesDir = compileTestKotlin.destinationDir

    // Uncomment to attach a debugger to integration tests JVM
//    jvmArg '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005'
}

integTestCluster {
    distribution = (es_version < "6.3.0") ? 'zip' : 'oss-zip' // Use oss-zip distribution starting from 6.3.0
}

licenseHeaders.enabled = false
dependencyLicenses.enabled = false
thirdPartyAudit.enabled = false

dependencies {
    // ES doesn't provide a full painless scripting engine maven artifact that we can compile against. Use a third party
    // artifact as a replacement for compilation and testing. See https://github.com/elastic/elasticsearch/issues/24528
    compileOnly "org.codelibs.elasticsearch.module:lang-painless:${es_version}"

    // Elasticsearch Nanny state
    compile "org.jetbrains.kotlin:kotlin-stdlib"
    compile "org.jetbrains.kotlin:kotlin-stdlib-common"
    compile "org.jetbrains:annotations:13.0"

    compile project(":core")
}
